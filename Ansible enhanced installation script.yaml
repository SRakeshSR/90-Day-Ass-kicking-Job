---
- hosts: all
  become: yes
  vars:
    nagios_version: '4.4.5'
    nagios_plugin_version: '2.2.1'
    packages_Ubuntu:
      - autoconf 
      - gcc 
      - libc6 
      - make 
      - wget 
      - unzip 
      - apache2 
      - php 
      - libapache2-mod-php7.2 
      - libgd-dev
      - libmcrypt-dev 
      - libssl-dev 
      - bc 
      - gawk 
      - dc 
      - build-essential 
      - snmp 
      - libnet-snmp-perl 
      - gettext
    packages_CentOs:
      - gcc 
      - glibc 
      - glibc-common 
      - unzip 
      - httpd 
      - php 
      - gd-devel 
      - perl 
      - postfix  
      - wget
      - gd
      - python-passlib
      - make
      - gettext
      - automake
      - openssl-devel 
      - autoconf 
      - net-snmp 
      - net-snmp-utils 
      - epel-release
      - perl-Net-SNMP  
    nagios_code_location: /tmp/nagioscore.tar.gz
    nagios_plugin_location: /tmp/nagios-plugins.tar.gz
  tasks:
    - name: install packages
      package:
        name: "{{ item }}"
        update_cache: yes
        state: present
      loop: "{{ packages_Ubuntu }}"
      loop: "{{ packages_CentOs }}"
      tags:
        - nagios
    - name: Download the source to temp folder
      get_url:
        dest: "{{ nagios_code_location }}"
        url: "https://github.com/NagiosEnterprises/nagioscore/archive/nagios-{{ nagios_version }}.tar.gz"
      tags:
        - nagios
    - name: untar the code
      unarchive:
        src: "{{ nagios_code_location }}"
        dest: "/tmp/"
      tags:
        - nagios
    - name: Compile Code For Ubuntu
      shell:
        cmd: sudo ./configure --with-httpd-conf=/etc/apache2/sites-enabled > configure.log && sudo make all > makeoutput.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
    - name: compile code on centos
      shell: 
        cmd: ./configure && make all > makeoutput.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "RedHat"
    - name: creating users & groups for ubuntu 
      shell:
        cmd: sudo make install-groups-users > installgroups.log && sudo usermod -a -G nagios www-data > usermod.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "Debian"
    - name: creating users & groups for centos
      shell:
        cmd: sudo make install-groups-users > installgroups.log && usermod -a -G nagios apache > usermod.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "RedHat"
    - name: Install Binaries on Ubuntu
      shell:
        cmd: sudo make install > makeinstall.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: Install Binaries on centos
      shell:
        cmd: make install > makeinstall.log
      args:
        chdir: /tmp/nagioscore-nagios-4.4.5
      when: ansible_os_family == "RedHat"
      tags:
        - nagios
    - name: Install Service / Daemon for Ubuntu
      shell:
        cmd: sudo make install-daemoninit > daemoninit.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: Install Service / Daemon for centos
      shell:
        cmd: make install-daemoninit > daemoninit.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "RedHat"
    - name: Install Command Mode for Ubuntu
      shell:
        cmd: sudo make install-commandmode > commandmode.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: Install Command mode on centos 
      shell:
        cmd: make install-commandmode > commandmode.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "RedHat"
    - name: Install Command Mode
      shell:
        cmd: sudo make install-commandmode > commandmode.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
    - name: Install Configuration Files for Ubuntu
      shell:
        cmd: sudo make install-config > config.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: Install Configuration Files on centos
      shell:
        cmd: sudo make install-config > config.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "RedHat"
    - name: Install Apache Config Files for Ubuntu
      shell:
        cmd: sudo make install-webconf > webconf.log && sudo a2enmod rewrite > a2enmodrewrite.log && sudo a2enmod cgi > cgi.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: Install Apache Configuration Files on centos
      shell:
        cmd: make install-webconf > webconf.log
      args:
        chdir: "/tmp/nagioscore-nagios-{{ nagios_version }}/"
      when: ansible_os_family == "RedHat"
      tags:
        - nagios
    - name: Install latest passlib with pip
      pip: name=passlib
      tags:
        - nagios
    - name: Create nagiosadmin user account
      htpasswd:
        path: /usr/local/nagios/etc/htpasswd.users # required. Path to the file that contains the usernames and passwords
        name: nagiosadmin # required. User name to add or remove
        password: nagiosadmin # not required. Password associated with user.,Must be specified if user does not exist yet.
      tags:
        - nagios
    - name: start apache
      service:
        name: apache2
        state: started
        enabled: true
      tags:
        - nagios
      when: ansible_os_family == "Debian"
    - name: start httpd
      service:
        name: httpd
        state: started
        enabled: true
      when: ansible_os_family == "RedHat"
    - name: start nagios
      service:
        name: nagios
        state: started
        enabled: true
      tags:
        - nagios
    - name: Download the plugin to temp folder
      get_url:
        dest: "{{ nagios_plugin_location }}"
        url: "https://github.com/nagios-plugins/nagios-plugins/archive/release-{{ nagios_plugin_version }}.tar.gz"
      tags:
        - plugin
    - name: untar the plugin code
      unarchive:
        src: "{{ nagios_plugin_location }}"
        dest: "/tmp/"
      tags:
        - plugin
    - name: Compile + Install for Ubuntu
      shell:
        cmd: sudo ./tools/setup > setup.log && sudo ./configure > configue.log && sudo make > make.log && sudo make install
      args:
        chdir: "/tmp/nagios-plugins-release-{{ nagios_plugin_version }}/"
      tags:
        - plugin
      when: ansible_os_family == "Debian"
    - name: Compile + Install for centos
      shell:
        cmd: ./tools/setup > setup.log && ./configure > configure.log && make > make.log && make install
      args:
        chdir: /tmp/nagios-plugins-release-2.2.1
      when: ansible_os_family == "RedHat"
    - name: start apache
      service:
        name: apache2
        state: started
        enabled: true
      when: ansible_os_family == "Debian"
    - name: start httpd
      service:
        name: httpd
        state: started
        enabled: true
      when: ansible_os_family == "RedHat"
    - name: start nagios
      service:
        name: nagios
        state: started
        enabled: true
